# Generated by Django 2.0.3 on 2018-03-25 19:18

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import enumfields.fields
import thefederation.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(auto_created=True, db_index=True, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('admin_email', models.EmailField(blank=True, max_length=254)),
                ('blocked', models.BooleanField(default=False)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('failures', models.PositiveIntegerField(default=0)),
                ('features', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('hide_from_list', models.BooleanField(default=False)),
                ('host', models.CharField(max_length=128, unique=True)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('name', models.CharField(max_length=300)),
                ('open_signups', models.BooleanField()),
                ('relay', enumfields.fields.EnumField(default='none', enum=thefederation.enums.Relay, max_length=10)),
                ('server_meta', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('version', models.CharField(blank=True, max_length=128)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(auto_created=True, db_index=True, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('latest_version', models.CharField(blank=True, max_length=128)),
                ('icon', models.CharField(default='unknown', max_length=80)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(auto_created=True, db_index=True, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(auto_created=True, db_index=True, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='node',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='nodes', to='thefederation.Platform'),
        ),
        migrations.AddField(
            model_name='node',
            name='protocols',
            field=models.ManyToManyField(related_name='nodes', to='thefederation.Protocol'),
        ),
        migrations.AddField(
            model_name='node',
            name='services',
            field=models.ManyToManyField(related_name='nodes', to='thefederation.Service'),
        ),
    ]
